"use client"

import type React from "react"
import { useState, useEffect } from "react"
import { useRouter } from "next/navigation"
import { Bell, Menu } from "lucide-react"
import { Button } from "@/components/ui/button"
import { SidebarInset, SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar"
import { DashboardSidebar } from "@/components/dashboard-sidebar"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"

interface DashboardLayoutProps {
  children: React.ReactNode
}

export function DashboardLayout({ children }: DashboardLayoutProps) {
  const router = useRouter()
  const [isAuthenticated, setIsAuthenticated] = useState(false)

  useEffect(() => {
    const checkAuth = () => {
      const hasAuthCookie = document.cookie.includes("auth_session=")
      setIsAuthenticated(hasAuthCookie)
      if (!hasAuthCookie) {
        router.push("/login?redirect=" + encodeURIComponent(window.location.pathname))
      }
    }

    checkAuth()
    window.addEventListener("storage", checkAuth)
    return () => window.removeEventListener("storage", checkAuth)
  }, [router])

  const notifications = [
    {
      id: 1,
      title: "Application Update",
      message: "Your Australia visa application has been processed.",
      time: "10 minutes ago",
      read: false,
    },
    {
      id: 2,
      title: "Document Required",
      message: "Please upload your passport scan for verification.",
      time: "2 hours ago",
      read: false,
    },
  ]

  if (!isAuthenticated) return null

  return (
    <SidebarProvider>
      <div className="flex min-h-screen w-full bg-[#F8FAFC]">
        <div className="hidden md:block">
          <DashboardSidebar className="fixed top-0 bottom-0 w-[240px] lg:w-[280px] border-r border-[#0c4a6e]/10 bg-[#0e7490] text-white" />
        </div>
        
        <div className="flex-1 w-full md:pl-[240px] lg:pl-[280px]">
          <SidebarInset>
            <div className="flex flex-col min-h-screen">
              <header className="sticky top-0 z-20 bg-white border-b border-gray-200 backdrop-blur-sm bg-white/80">
                <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                  <div className="flex h-16 items-center justify-between gap-4">
                    <div className="flex items-center gap-3">
                      <SidebarTrigger>
                        <Button variant="ghost" size="icon" className="md:hidden">
                          <Menu className="h-5 w-5 text-gray-700" />
                        </Button>
                      </SidebarTrigger>
                    </div>

                    <div className="flex items-center gap-4">
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button variant="ghost" size="icon" className="relative hover:bg-gray-100/80">
                            <Bell className="h-5 w-5 text-gray-600" />
                            {notifications.some(n => !n.read) && (
                              <span className="absolute -right-1 -top-1 flex h-4 w-4 items-center justify-center rounded-full bg-indigo-600 text-[10px] font-medium text-white">
                                {notifications.filter(n => !n.read).length}
                              </span>
                            )}
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent align="end" className="w-[380px] p-2">
                          <DropdownMenuLabel className="flex items-center justify-between px-3 py-2 mb-1">
                            <span className="text-base font-semibold text-gray-900">Notifications</span>
                            <Button
                              variant="ghost"
                              className="h-8 px-2 text-sm font-medium text-indigo-600 hover:text-indigo-700 hover:bg-indigo-50"
                              onClick={() => router.push("/notifications")}
                            >
                              View all
                            </Button>
                          </DropdownMenuLabel>
                          <div className="overflow-hidden">
                            {notifications.map((notification) => (
                              <DropdownMenuItem
                                key={notification.id}
                                className="flex flex-col items-start rounded-md px-3 py-2 focus:bg-gray-50"
                                onClick={() => router.push("/notifications")}
                              >
                                <div className="flex w-full justify-between gap-2">
                                  <span className="font-medium text-gray-900">{notification.title}</span>
                                  <span className="text-xs text-gray-500">{notification.time}</span>
                                </div>
                                <p className="mt-1 text-sm text-gray-600 line-clamp-2">{notification.message}</p>
                              </DropdownMenuItem>
                            ))}
                          </div>
                        </DropdownMenuContent>
                      </DropdownMenu>

                      <Button
                        onClick={() => router.push("/applications/new")}
                        className="hidden md:inline-flex bg-indigo-600 text-white hover:bg-indigo-700 shadow-sm"
                      >
                        Start New Application
                      </Button>
                    </div>
                  </div>
                </div>
              </header>

              <main className="flex-1 overflow-auto">
                <div className="w-full h-full">
                  <div className="p-6">
                    <div className="bg-white rounded-lg shadow-sm p-6">
                      {children}
                    </div>
                  </div>
                </div>
              </main>
            </div>
          </SidebarInset>
        </div>
      </div>
    </SidebarProvider>
  )
}
